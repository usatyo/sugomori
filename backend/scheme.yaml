openapi: 3.0.4
info:
  title: sugomori
  description: usatyo's api for joseki
  license:
    name: MIT License
  version: 1.0.0
servers:
  - url: undefined
paths:
  /joseki:
    get:
      parameters:
        - name: videoId
          in: query
          description: videoId for joseki
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Stone"
        "404":
          description: Joseki not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /joseki/register:
    put:
      parameters:
        - name: stones
          in: query
          description: register joseki
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Stone"
      responses:
        "200":
          description: successful registered
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /video:
    get:
      parameters:
        - name: stones
          in: query
          description: searching joseki
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Stone"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: Video not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Stone:
      type: object
      properties:
        color:
          type: boolean
          example: false # true: black, false: white
        x:
          type: integer
          format: int64
          example: 3
        y:
          type: integer
          format: int64
          example: 4
    Joseki:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        stones:
          type: array
          items:
            $ref: "#/components/schemas/Stone"
        videoId:
          type: string
          example: "PTdC1aVH-LQ"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: "##default"
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  requestBodies:
    Joseki:
      description: Joseki object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Joseki"
        application/xml:
          schema:
            $ref: "#/components/schemas/Joseki"
